pattern属性

a — 匹配一个字符a(不能匹配 b, aa等等.)
abc — 匹配 a, 其次 b, 最后 c.
a* — 匹配 0 个或者多个字符 a (+ 代表至少匹配一个或者多个).
[^a] — 匹配一个字符，但它不能是a.
a|b — 匹配一个字符 a 或者 b.
[abc] — 匹配一个字符，它可以是a,b或c.
[^abc] — 匹配一个字符，但它不可以是a,b或c.
[a-z] — 匹配字符范围 a-z且全部小写 (你可以使用 [A-Za-z] 涵盖大小写，或 [A-Z] 来限制必须大写).
a.c — 匹配字符 a,中间匹配任意一个字符，最后匹配字符 c.
a{5} — 匹配字符 a五次。
a{5,7} — 匹配字符 a五到七次，不能多或者少。
你也可以在这些表达式中使用数字和其他字符，例如：

[ -] — 匹配一个空格或者虚线。
[0-9] — 匹配数字范围 0~9.
你可以任意地组合这些，你可以任意指定不同的部分：

[Ll].*k — 匹配一个大写L或者小写的l, 之后匹配 0 个或多个任意类型的字符，最后匹配一个小写字母 k.
[A-Z][A-Za-z' -]+ — 一个大写字母后面跟着匹配一个及以上的大小写字母或者中划线或者撇号或者空格。这个可以用于校验英语会话中城市或城镇名，但这需要首字母以大写开头，不包括其他字符，例如来自英国的 Manchester, Ashton-under-lyne, 以及 Bishop's Stortford 等。
[0-9]{3}[ -][0-9]{3}[ -][0-9]{4} — 简单的匹配一个美国内的电话号码 — 三个数字 0-9, 后面跟着一个空格或者中划线，之后匹配三个数字 0-9, 再跟着一个空格或者中划线，最后跟着四个数字 0-9. 但实际情况可能更加复杂，因为有些人会给号码加上括号什么的，这里的表达式只是用来做一个简单的演示。